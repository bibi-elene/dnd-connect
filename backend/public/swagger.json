{
  "openapi": "3.0.0",
  "paths": {
    "/characters": {
      "get": {
        "operationId": "CharacterController_findAll",
        "summary": "Get all characters",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of characters."
          }
        },
        "tags": [
          "characters"
        ]
      },
      "post": {
        "operationId": "CharacterController_create",
        "summary": "Create a new character",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Character"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Character created."
          }
        },
        "tags": [
          "characters"
        ]
      }
    },
    "/characters/me": {
      "get": {
        "operationId": "CharacterController_findCurrentUserCharacters",
        "summary": "Get all characters for the current user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of characters for the current user."
          }
        },
        "tags": [
          "characters"
        ]
      }
    },
    "/characters/{id}": {
      "get": {
        "operationId": "CharacterController_findOne",
        "summary": "Get a character by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Character found."
          },
          "404": {
            "description": "Character not found."
          }
        },
        "tags": [
          "characters"
        ]
      },
      "put": {
        "operationId": "CharacterController_update",
        "summary": "Update an existing character",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Character"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Character updated."
          }
        },
        "tags": [
          "characters"
        ]
      },
      "delete": {
        "operationId": "CharacterController_remove",
        "summary": "Delete a character",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Character deleted."
          }
        },
        "tags": [
          "characters"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "operationId": "AuthController_getMe",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    }
  },
  "info": {
    "title": "D&D Connect API",
    "description": "API documentation for the D&D Connect application",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "http://localhost:3001"
    }
  ],
  "components": {
    "schemas": {
      "Character": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The unique identifier for the character"
          },
          "name": {
            "type": "string",
            "description": "The name of the character"
          },
          "class": {
            "type": "string",
            "description": "The class of the character"
          },
          "level": {
            "type": "number",
            "description": "The level of the character"
          },
          "race": {
            "type": "string",
            "description": "The race of the character"
          },
          "background": {
            "type": "string",
            "description": "The background of the character"
          }
        },
        "required": [
          "id",
          "name",
          "class",
          "level",
          "race",
          "background"
        ]
      }
    }
  }
}